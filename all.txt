鉴于书籍越来越多，,最近打算自己做一个android端apk管理自己的图书，主要想通过扫描二维码的方式采集，将信息存储在云端，电脑也可以访问修改，去添加新的图书(但不是主要新增方式)，还可以实现网络查找推荐等功能。得充分考虑移动端的时间碎片化、便利性特点，我得站在使用手机人的角度去尽可能多的想一些非常使用的功能。设计追求简洁清新，但功能要齐全,这一点上我非常喜欢g高效Todo的设计风格，我得好好学学，另外参考下google官方设计文档。详细如下：设计方面，直接模仿其他应用界面先实现功能！！
====================
参考apk
==================
  http://book.douban.com/subject/4619176/ 右侧有“在哪儿找到这本书”
 http://ipac.library.sh.cn/ipac20/ipac.jsp?aspect=basic_search&profile=sl&index=ISBN&term=9787532750269&otherloc=true
==================
利用晚上下班回家和周末。必须尽量每天挤出一些时间来，少玩一把dota(2)！！！坚持，喜爱，有趣，自信。

项目周期初步计划3个月，从2014.1.6到2014.4.5。这个计划分为以下几部分：
1、2014.1.6-1014.1.10（5天）：个人需求喜好收集和调研，环境资料准备阶段。
    就像下面的零星点点，初步先记录下面的，后续可以突发灵感再补充进去； 调研指的是看看目前安卓市场上有无此类应用，学习下人家的长处，汲取过来，或者其他已知的应用的某些功能；开发环境搭建，资料准备，开发过程中需要的东西google就行，图片UI设计情非得已看能不能让 LJian帮忙下做或者让她给点意见；
2、2014.1.11-2014.1.13（3天）：框架设计阶段，主要的设计思路，面向对象的易扩展的。
3、2014.1.14-2014.1.27（14天）：初步开发四五个小功能，图书采集首当其冲，极其管理增删查阅。
4. 2014.1.28-2014.2.8（12天）：过年放假 ，好好过年，陪父母。
5、2014.2.9-2014.3.20(40天):项目主要开发阶段，功能框架先行，界面和细节最后处理；
    这个地方是最主要的阶段，需要继续细化开发进程，那几天做哪些功能，必须得到细化！！！
6、2014.3.21-2014.4.2（12天）：将UI改进涉及到的更美观，bug修改；
7、2014.4.3-2014.4.5(3天)：收尾阶段，总结，对这三个月来这个项目做个总结，写写心得。



1、和PC端同步，也可以通过PC访问这些图书系统信息，应该说这些信息会取自云端，然后也可以像手机一样去采集新书；
2、android端能同步到云端，比如百度云,也可以从云端同步到本地，其中还需考虑非对称加密存储等安全问题。另外，当手机无法连接到网络的时候需要考虑本地pc和移动端与云端的修改冲突和同步问题；
3、能通过短信、微信、QQ共享，其一是尝试新鲜的技术手段，现在许多应用都能做到这点，其二可以向朋友推荐一本好书或者其中的一段话及其自己的感受等，；这个好友共享，我也可以共享我从网络上发现的好书作以推荐。
4、这个apk要至少具有一般图书馆管理系统最基本的功能，不求强大，可以看看图书管理这门学问是如何管理图书馆数以百万级的图书学科比如说图书是如何编号分类的。如果自己有兴趣，可以后续扩增。说了这句话，我觉得我该遭良心谴责，我已经不止一次用诸如“后续扩增”的谎言掩盖我的懒惰和心血来潮；
5、还可以从互联网查找一些书目，比如我知道某本书的名字，或者查找某个作家（著者）的作品，以及这些书在各大网站的当前售价情况，有无打折促销之类，这样就能及时提醒我我何时出手，收藏，淘宝:P 
6、添加一些像读书闹钟的小功能，提醒自己每天挤出个小时的时间读书，要养成好的习惯，比如在上班的地铁上；
7、可以收藏读书过程中的有收获的东西，保存或者写的读书笔记，能提醒自己温故而知新，做个widget ToDoList。这些东西能够使用查找和历史查找。
8.应用可以自更新。
9，我的这个程序可否和现实中的图书馆、附近书店对接，比如呢，当我无意进入图书馆附近时，闹钟提醒震动。我不是有图书编号功能吗，我是否可以添加一些小功能，当我走进某个图书馆的时候，如果我没看到图书馆导读，我也能利用这个应用知道我感兴趣的图书编号大致以什么开头，天下图书馆编号还是一样的；
10、提供附近图书馆的位置，比如我新到上海杨浦区，我想知道离我最近的书店在哪儿，坐车怎么去。这个可以使用google地图或者百度、高德等sdk。
11、我在想，经常性的，遇到一个问题，我看书很多字不认识，或者需要查询一些信息，我能否通过扫描到的方式去互联网查找。
12、还有，看翻译书籍一个很大的问题，同样一篇原著，翻译出来的不同版本差异是在太大，为了找到最好的译著，我是否可以参考翻译作者的影响力以及网络各大电商售后书评来决定呈现给自己以作参考呢？比如，作者简介、译者简介、书评。
13、对了，我很喜欢QQ空间和高效Todo的timeline。
14、一个人用一部手机也就最多三年（可能坏了，丢了），既然这个应用是偏向个人图书管理，那么势必（至少就我个人而言，至少现阶段）会换手机，这就可能需要考虑已有数据的迁移和还原，所以需要将已有数据加密存储在稳定的云端。
15、比如我在任何一个地方（书店里、路上碰到的朋友手上的一本书），我不想一条条去输入这本书的信息，就可以使用扫一扫，自动键入。
16.可以考虑加入账户功能，数据库和账户关联。甚至设计多用户共享，但是不通用之间不得修改，只能查看。
18、使用接近传感器或者二维码扫描和朋友共享书单，或者分享到微信圈。
19.加入搜索框功能，可以输入书名、作者、关键字 从title,author,summary中过滤，显示到ListView；另外也可以考虑去互联网搜索。
20、参考下TodoList的动画效果、时间轴
21、大点的功能组成插件形式；
22、与云端和其他客户端的数据传输采用加密后的数据库文件，直接将这个数据库传过去。下次直接加载db；比如我通过共享，发送给微信好友；
23、考虑不同版本的兼容性，数据库结构兼容性；
24、做设置项，加入极简模式，比如打开此模式，只打开部分关键功能，简化界面；
25、加入整理查看功能，比如用户选择文学，那么呈现，比如用户选择狄更斯作品，那么查询显示；
26、加入评论功能，也可加入kindle里面的读书笔记功能，在部分句子之间插入笔录，这个得考虑到怎么样将实体书和这个关联起来的结构；
27、收录书籍和删除一本书需要密码，因为不能轻易被人加入和删除。查询相关不需要M密码；支持批量选中加入和删除，否则当书比较的多的时候一个个太麻烦；
28、支持手机端编辑功能，最好也能在其他手机客户端编辑，当然Android是是用sqlite3，所以有理由使其支持电脑端编辑；
 29、支持自动存储log功能，存储到sd卡去。按照日期存储，利用排查错误；
 

还有什么好的建议呢？还需要想想。
比如个人图书采集、查找、分类、删除（比如丢了的，借出去的没归还的），互联网图书查找、收藏、各大书籍市场（当当、淘宝、天猫、亚马逊、京东、易迅、腾讯）报价、书籍简介（有助于快速了解这本书的内容提供是否购买的依据）。

有种情况，比如我看实体书到100页，然后我可以通过android扫描条形码，在手机上输入我哪天什么时候读到多少页，然后呢，有天我在地铁上，突然无聊想看看书，于是呢，我可以在网络上搜索到这本书（要做到对应页一样，就必须是同一本书），继续阅读。这其中有个问题，如何找到免费资源（至于存不存在那完全靠运气了）。还有界面如何做到很美观，现在很多读书软做得真是让我失望，没有任何艺术性和趣味性。翻页效果、动画效果等。

近期阅读进展，做个走势图，每天读了多少页，读了什么书。很久以后，我也可以回过头来看看我是如何一步步进步，或者我是如何一步步堕落至无止境的深渊炼狱。

然后增加个读书笔记（可能因为喜好里面的某一段话），读后感（读完整本书的感受）。

还有喜好分析，网络推荐。这个即可对本地图书喜好分析，也可对网络收藏喜好分析，然后推荐网络上的图书，并查询他们报价。有关这些信息和本地图书信息一样，也得考虑保存在云端。

以上这些信息的保存备份和安全性是后期开发中必须考虑的问题。

做一个timeline，记录何时收录和修改、删除某条记录（比如如果为收录，则绿色丢入图标标明，修改带箭头圆圈则橙色标明，红色叉叉表示删除，电脑端的话用个小电脑logo，手机用手机logo）。这条记录需要附带简单的说明，书名作者之类的，或者还有个封面缩略图。http://www.eoeandroid.com/forum.php?mod=viewthread&tid=187725 这个家伙做得太棒了:)
另外针对timeline还可参考http://mmandroid.diandian.com/post/2013-05-27/40050148943
http://www.cnblogs.com/mudoot/archive/2012/01/19/path_composer_menu.html

看到我的手机设置账户中有印象笔记、淘宝、微信的账号，这个很有用。 

app登陆需要账户和密码，可能会有多个用户。以及app数据在不同手机之间的数据迁移，要不然不方便啊，即使可以传到云端，然后从云端下载。